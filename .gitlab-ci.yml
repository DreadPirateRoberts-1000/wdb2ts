image: docker:latest

cache:
  untracked: true

stages:
- create_build_image
- build_binaries
- build_image
- release

variables:
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts_build:$CI_COMMIT_REF_NAME
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts:$CI_COMMIT_REF_NAME
  CONTAINER_TEST_WDB2TS_ETCDCLI_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts_etcdcli:$CI_COMMIT_REF_NAME
  CONTAINER_BUILDBASE_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts_buildbase:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts:latest
  CONTAINER_RELEASE_WDB2TS_ETCDCLI_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts_etcdcli:latest
  CONTAINER_BUILDBASE_RELEASE_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/wdb2ts_buildbase:latest

create_build_image:
  stage: create_build_image
  script:
    - cd $CI_PROJECT_DIR/docker
    - docker build --pull -f build/Dockerfile_wdb2ts_build -t $CONTAINER_BUILD_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_BUILD_IMAGE
  tags:
    - docker

  
compile:
  image: $CONTAINER_BUILD_IMAGE
  stage: build_binaries
  script:
    - free -h
    - ./build.sh
    - cd build
    - make DESTDIR=$CI_PROJECT_DIR/docker/.runtime install
    - mkdir -p $CI_PROJECT_DIR/docker/.runtime/usr/local/lib
    - cp -R /usr/local/lib/*.so* $CI_PROJECT_DIR/docker/.runtime/usr/local/lib
    - ls -Rla $CI_PROJECT_DIR/docker/.runtime
  tags:
    - docker

build_image:
  stage: build_image
  script:
    - cd docker
    - docker build --pull -f runtime/Dockerfile_wdb2ts -t $CONTAINER_TEST_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - docker


build_wdb2ts_etcdcli_image:
  stage: build_image
  script:
    - cd docker
    - docker build --pull -f runtime/Dockerfile_wdb2ts_etcdcli -t $CONTAINER_TEST_WDB2TS_ETCDCLI_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_TEST_WDB2TS_ETCDCLI_IMAGE
  tags:
    - docker


#build_buildbase:
#  stage: build_image
#  script:
#    - cd docker
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker build --pull -t $CONTAINER_BUILDBASE_IMAGE .
#    - docker push $CONTAINER_BUILDBASE_IMAGE
#  only:
#   - master

release-image:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
  tags:
    - docker

release-wdb2ts-etcdcli-image:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_WDB2TS_ETCDCLI_IMAGE $CONTAINER_RELEASE_WDB2TS_ETCDCLI_IMAGE
    - docker push $CONTAINER_RELEASE_WDB2TS_ETCDCLI_IMAGE
  only:
    - master
  tags:
    - docker


#release-buildbase-image:
#  stage: release
#  script:
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker pull $CONTAINER_BUILDBASE_IMAGE
#    - docker tag $CONTAINER_BUILDBASE_IMAGE $CONTAINER_BUILDBASE_RELEASE_IMAGE
#    - docker push $CONTAINER_BUILDBASE_RELEASE_IMAGE
#  only:
#    - metric


